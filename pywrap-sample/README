This is a small project to demonstrate broadcast-aware python wrapping
functionality provided by numpysane_pywrap.

The wrapper can be produced and built by running "make". Then you can use the
wrapper (to check that the output is correct) by running tst.py

We produce a broadcast-aware python wrapper to a tiny C library called
"testlib". This library is in testlib.[ch], and can compute inner and outer
products.

A demo script to generate broadcast-aware python wrapping for testlib is in
genpywrap.py. The Makefile is set up to run this script, and to compile the
results into a python extension module.

This extension module can then be used by calling testlibmodule.inner() and
testlibmodule.outer(). Samples appear in tst.py

